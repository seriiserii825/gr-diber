# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

interface Node {
    id: ID!
}

interface NodeConnection {
    edges: [NodeConnectionEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

interface NodeConnectionEdge {
    next: Node
    node: Node
    previous: Node
}

type Metadata {
    pathPrefix: String
    siteDescription: String
    siteName: String
    siteUrl: String
}

type NodeBelongsTo implements NodeConnection {
    edges: [NodeBelongsToEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type NodeBelongsToEdge implements NodeConnectionEdge {
    next: Node
    node: Node
    previous: Node
}

type Page {
    context: JSON!
    path: String!
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    isFirst: Boolean!
    isLast: Boolean!
    perPage: Int!
    totalItems: Int!
    totalPages: Int!
}

type Query {
    allPage(
        "Filter pages."
        filter: PageFilterInput
    ): [Page]
    allWordPressAltreBevande(
        "Filter for WordPressAltreBevande nodes."
        filter: WordPressAltreBevandeFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressAltreBevandeConnection
    allWordPressAttachment(
        "Filter for WordPressAttachment nodes."
        filter: WordPressAttachmentFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressAttachmentConnection
    allWordPressAuthor(
        "Filter for WordPressAuthor nodes."
        filter: WordPressAuthorFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressAuthorConnection
    allWordPressBevandeCat(
        "Filter for WordPressBevandeCat nodes."
        filter: WordPressBevandeCatFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressBevandeCatConnection
    allWordPressCategory(
        "Filter for WordPressCategory nodes."
        filter: WordPressCategoryFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressCategoryConnection
    allWordPressLeNostreBirre(
        "Filter for WordPressLeNostreBirre nodes."
        filter: WordPressLeNostreBirreFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressLeNostreBirreConnection
    allWordPressPage(
        "Filter for WordPressPage nodes."
        filter: WordPressPageFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressPageConnection
    allWordPressPost(
        "Filter for WordPressPost nodes."
        filter: WordPressPostFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressPostConnection
    allWordPressPostTag(
        "Filter for WordPressPostTag nodes."
        filter: WordPressPostTagFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressPostTagConnection
    allWordPressWpBlock(
        "Filter for WordPressWpBlock nodes."
        filter: WordPressWpBlockFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument],
        sortBy: String = "date"
    ): WordPressWpBlockConnection
    metaData: Metadata @deprecated(reason : "Use Query.metadata instead.")
    metadata: Metadata
    page(path: String!): Page
    wordPressAltreBevande(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressAltreBevande
    wordPressAttachment(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressAttachment
    wordPressAuthor(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressAuthor
    wordPressBevandeCat(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressBevandeCat
    wordPressCategory(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressCategory
    wordPressLeNostreBirre(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressLeNostreBirre
    wordPressPage(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressPage
    wordPressPost(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressPost
    wordPressPostTag(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressPostTag
    wordPressWpBlock(
        id: ID,
        "Will return an error if not nullable."
        nullable: Boolean = false,
        path: String
    ): WordPressWpBlock
}

type WordPressAltreBevande implements Node {
    author: WordPressAuthor
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    bevandeCat(limit: Int, order: SortOrder = DESC, skip: Int = 0, sort: [SortArgument], sortBy: String): [WordPressBevandeCat]
    date(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    dateGmt(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    featuredMedia: WordPressAttachment
    guid: String
    id: ID!
    link: String
    modified(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    modifiedGmt(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    slug: String
    status: String
    template: String
    title: String
    type: String
}

type WordPressAltreBevandeConnection implements NodeConnection {
    edges: [WordPressAltreBevandeEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressAltreBevandeEdge implements NodeConnectionEdge {
    next: WordPressAltreBevande
    node: WordPressAltreBevande
    previous: WordPressAltreBevande
}

type WordPressAttachment implements Node {
    altText: String
    author: WordPressAuthor
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    caption: String
    commentStatus: String
    date(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    dateGmt(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    description: String
    guid: String
    id: ID!
    link: String
    mediaDetails: WordPressAttachment_MediaDetails
    mediaType: String
    mimeType: String
    modified(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    modifiedGmt(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    pingStatus: String
    post: Int
    slug: String
    smush: WordPressAttachment_Smush
    sourceUrl: String
    status: String
    template: String
    title: String
    type: String
}

type WordPressAttachmentConnection implements NodeConnection {
    edges: [WordPressAttachmentEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressAttachmentEdge implements NodeConnectionEdge {
    next: WordPressAttachment
    node: WordPressAttachment
    previous: WordPressAttachment
}

type WordPressAttachment_MediaDetails {
    file: String
    height: Int
    imageMeta: WordPressAttachment_MediaDetails_ImageMeta
    sizes: WordPressAttachment_MediaDetails_Sizes
    width: Int
}

type WordPressAttachment_MediaDetails_ImageMeta {
    aperture: String
    camera: String
    caption: String
    copyright: String
    createdTimestamp: String
    credit: String
    focalLength: String
    iso: String
    orientation: String
    shutterSpeed: String
    title: String
}

type WordPressAttachment_MediaDetails_Sizes {
    _1536X1536: WordPressAttachment_MediaDetails_Sizes_1536X1536
    full: WordPressAttachment_MediaDetails_Sizes_Full
    mediumLarge: WordPressAttachment_MediaDetails_Sizes_MediumLarge
    postThumbnail: WordPressAttachment_MediaDetails_Sizes_PostThumbnail
    thumbnail: WordPressAttachment_MediaDetails_Sizes_Thumbnail
}

type WordPressAttachment_MediaDetails_Sizes_1536X1536 {
    file: String
    height: Int
    mimeType: String
    sourceUrl: String
    width: Int
}

type WordPressAttachment_MediaDetails_Sizes_Full {
    file: String
    height: Int
    mimeType: String
    sourceUrl: String
    width: Int
}

type WordPressAttachment_MediaDetails_Sizes_MediumLarge {
    file: String
    height: Int
    mimeType: String
    sourceUrl: String
    width: Int
}

type WordPressAttachment_MediaDetails_Sizes_PostThumbnail {
    file: String
    height: Int
    mimeType: String
    sourceUrl: String
    width: Int
}

type WordPressAttachment_MediaDetails_Sizes_Thumbnail {
    file: String
    height: Int
    mimeType: String
    sourceUrl: String
    width: Int
}

type WordPressAttachment_Smush {
    sizes: WordPressAttachment_Smush_Sizes
    stats: WordPressAttachment_Smush_Stats
}

type WordPressAttachment_Smush_Sizes {
    _1536X1536: WordPressAttachment_Smush_Sizes_1536X1536
    mediumLarge: WordPressAttachment_Smush_Sizes_MediumLarge
    postThumbnail: WordPressAttachment_Smush_Sizes_PostThumbnail
    thumbnail: WordPressAttachment_Smush_Sizes_Thumbnail
}

type WordPressAttachment_Smush_Sizes_1536X1536 {
    bytes: Int
    percent: Float
    sizeAfter: Int
    sizeBefore: Int
    time: Float
}

type WordPressAttachment_Smush_Sizes_MediumLarge {
    bytes: Int
    percent: Float
    sizeAfter: Int
    sizeBefore: Int
    time: Float
}

type WordPressAttachment_Smush_Sizes_PostThumbnail {
    bytes: Int
    percent: Float
    sizeAfter: Int
    sizeBefore: Int
    time: Float
}

type WordPressAttachment_Smush_Sizes_Thumbnail {
    bytes: Int
    percent: Float
    sizeAfter: Int
    sizeBefore: Int
    time: Float
}

type WordPressAttachment_Smush_Stats {
    apiVersion: String
    bytes: Int
    keepExif: Int
    lossy: Boolean
    percent: Float
    sizeAfter: Int
    sizeBefore: Int
    time: Float
}

type WordPressAuthor implements Node {
    avatarUrls: WordPressAuthor_AvatarUrls
    avatars: WordPressAuthor_Avatars
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    description: String
    id: ID!
    link: String
    name: String
    slug: String
    title: String
    url: String
}

type WordPressAuthorConnection implements NodeConnection {
    edges: [WordPressAuthorEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressAuthorEdge implements NodeConnectionEdge {
    next: WordPressAuthor
    node: WordPressAuthor
    previous: WordPressAuthor
}

type WordPressAuthor_AvatarUrls {
    _24: String
    _48: String
    _96: String
}

type WordPressAuthor_Avatars {
    avatar24: String
    avatar48: String
    avatar96: String
}

type WordPressBevandeCat implements Node {
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    content: String
    count: Int
    id: ID!
    slug: String
    title: String
}

type WordPressBevandeCatConnection implements NodeConnection {
    edges: [WordPressBevandeCatEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressBevandeCatEdge implements NodeConnectionEdge {
    next: WordPressBevandeCat
    node: WordPressBevandeCat
    previous: WordPressBevandeCat
}

type WordPressCategory implements Node {
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    content: String
    count: Int
    id: ID!
    slug: String
    title: String
}

type WordPressCategoryConnection implements NodeConnection {
    edges: [WordPressCategoryEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressCategoryEdge implements NodeConnectionEdge {
    next: WordPressCategory
    node: WordPressCategory
    previous: WordPressCategory
}

type WordPressLeNostreBirre implements Node {
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    id: ID!
}

type WordPressLeNostreBirreConnection implements NodeConnection {
    edges: [WordPressLeNostreBirreEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressLeNostreBirreEdge implements NodeConnectionEdge {
    next: WordPressLeNostreBirre
    node: WordPressLeNostreBirre
    previous: WordPressLeNostreBirre
}

type WordPressPage implements Node {
    acf: WordPressPage_Acf
    author: WordPressAuthor
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    commentStatus: String
    content: String
    date(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    dateGmt(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    excerpt: String
    featuredMedia: WordPressAttachment
    guid: String
    id: ID!
    link: String
    menuOrder: Int
    modified(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    modifiedGmt(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    parent: Int
    pingStatus: String
    slug: String
    status: String
    template: String
    title: String
    type: String
}

type WordPressPageConnection implements NodeConnection {
    edges: [WordPressPageEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressPageEdge implements NodeConnectionEdge {
    next: WordPressPage
    node: WordPressPage
    previous: WordPressPage
}

type WordPressPage_Acf {
    homeIntro: WordPressPage_Acf_HomeIntro
    intro: WordPressPage_Acf_Intro
}

type WordPressPage_Acf_HomeIntro {
    link: String
    subtitle: String
    title: String
}

type WordPressPage_Acf_Intro {
    bigImage: String
    linkText: String
    smallImage: String
    text: String
    title: String
}

type WordPressPost implements Node {
    author: WordPressAuthor
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    categories(limit: Int, order: SortOrder = DESC, skip: Int = 0, sort: [SortArgument], sortBy: String): [WordPressCategory]
    commentStatus: String
    content: String
    date(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    dateGmt(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    excerpt: String
    featuredMedia: WordPressAttachment
    format: String
    guid: String
    id: ID!
    link: String
    modified(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    modifiedGmt(
        "Date format"
        format: String,
        "Locale"
        locale: String
    ): Date
    path(to: String = "default"): String
    pingStatus: String
    slug: String
    status: String
    sticky: Boolean
    template: String
    title: String
    type: String
}

type WordPressPostConnection implements NodeConnection {
    edges: [WordPressPostEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressPostEdge implements NodeConnectionEdge {
    next: WordPressPost
    node: WordPressPost
    previous: WordPressPost
}

type WordPressPostTag implements Node {
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    id: ID!
}

type WordPressPostTagConnection implements NodeConnection {
    edges: [WordPressPostTagEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressPostTagEdge implements NodeConnectionEdge {
    next: WordPressPostTag
    node: WordPressPostTag
    previous: WordPressPostTag
}

type WordPressWpBlock implements Node {
    belongsTo(
        filter: BelongsToFilterInput,
        limit: Int,
        order: SortOrder = DESC,
        page: Int,
        "Defaults to 25 when page is provided."
        perPage: Int,
        skip: Int = 0,
        sort: [SortArgument!],
        sortBy: String = "date"
    ): NodeBelongsTo
    id: ID!
}

type WordPressWpBlockConnection implements NodeConnection {
    edges: [WordPressWpBlockEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type WordPressWpBlockEdge implements NodeConnectionEdge {
    next: WordPressWpBlock
    node: WordPressWpBlock
    previous: WordPressWpBlock
}

enum ImageFit {
    "Embed within both provided dimensions."
    contain
    "Crop to cover both provided dimensions."
    cover
    "Ignore the aspect ratio of the input and stretch to both provided dimensions."
    fill
    "Preserving aspect ratio, resize the image to be as large as possible while ensuring its dimensions are less than or equal to both those specified."
    inside
    "Preserving aspect ratio, resize the image to be as small as possible while ensuring its dimensions are greater than or equal to both those specified. Some of these values are based on the object-fit CSS property."
    outside
}

enum SortOrder {
    "Sort ascending"
    ASC
    "Sort descending"
    DESC
}

enum TypeName {
    WordPressAltreBevande
    WordPressAttachment
    WordPressAuthor
    WordPressBevandeCat
    WordPressCategory
    WordPressLeNostreBirre
    WordPressPage
    WordPressPost
    WordPressPostTag
    WordPressWpBlock
}

input BelongsToFilterInput {
    id: IDQueryOperatorInput
    path: StringQueryOperatorInput
    typeName: TypeNameQueryOperatorInput
}

input BooleanQueryOperatorInput {
    "Filter by property of (strict) equality."
    eq: Boolean
    "Filter nodes that contain the field, including nodes where the field value is null."
    exists: Boolean
    "Filter by property matching any of the provided values."
    in: [Boolean]
    "Filter by property not equal to provided value."
    ne: Boolean
    "Filter by property not matching any of the provided values."
    nin: [Boolean]
}

input DateQueryOperatorInput {
    "Filter by property between provided values."
    between: [Date]
    "Filter by date property equal to provided date value."
    dteq: Date
    "Filter by property of (strict) equality."
    eq: Date
    "Filter nodes that contain the field, including nodes where the field value is null."
    exists: Boolean
    "Filter by property greater than provided value."
    gt: Date
    "Filter by property greater or equal to provided value."
    gte: Date
    "Filter by property matching any of the provided values."
    in: [Date]
    "Filter by property less than provided value."
    lt: Date
    "Filter by property less than or equal to provided value."
    lte: Date
    "Filter by property not equal to provided value."
    ne: Date
    "Filter by property not matching any of the provided values."
    nin: [Date]
}

input FloatQueryOperatorInput {
    "Filter by property between provided values."
    between: [Float]
    "Filter by property of (strict) equality."
    eq: Float
    "Filter nodes that contain the field, including nodes where the field value is null."
    exists: Boolean
    "Filter by property greater than provided value."
    gt: Float
    "Filter by property greater or equal to provided value."
    gte: Float
    "Filter by property matching any of the provided values."
    in: [Float]
    "Filter by property less than provided value."
    lt: Float
    "Filter by property less than or equal to provided value."
    lte: Float
    "Filter by property not equal to provided value."
    ne: Float
    "Filter by property not matching any of the provided values."
    nin: [Float]
}

input IDQueryOperatorInput {
    "Filter by property of (strict) equality."
    eq: ID
    "Filter nodes that contain the field, including nodes where the field value is null."
    exists: Boolean
    "Filter by property matching any of the provided values."
    in: [ID]
    "Filter by property not equal to provided value."
    ne: ID
    "Filter by property not matching any of the provided values."
    nin: [ID]
}

input IntQueryOperatorInput {
    "Filter by property between provided values."
    between: [Int]
    "Filter by property of (strict) equality."
    eq: Int
    "Filter nodes that contain the field, including nodes where the field value is null."
    exists: Boolean
    "Filter by property greater than provided value."
    gt: Int
    "Filter by property greater or equal to provided value."
    gte: Int
    "Filter by property matching any of the provided values."
    in: [Int]
    "Filter by property less than provided value."
    lt: Int
    "Filter by property less than or equal to provided value."
    lte: Int
    "Filter by property not equal to provided value."
    ne: Int
    "Filter by property not matching any of the provided values."
    nin: [Int]
}

input JSONQueryOperatorInput {
    "Filter by property of (strict) equality."
    eq: JSON
    "Filter nodes that contain the field, including nodes where the field value is null."
    exists: Boolean
    "Filter by property matching any of the provided values."
    in: [JSON]
    "Filter by property not equal to provided value."
    ne: JSON
    "Filter by property not matching any of the provided values."
    nin: [JSON]
    "Filter by property matching provided regular expression."
    regex: String
}

input PageFilterInput {
    context: JSONQueryOperatorInput
    path: StringQueryOperatorInput
}

input SortArgument {
    by: String! = "date"
    order: SortOrder = DESC
}

input StringQueryOperatorInput {
    "Filter by property of (strict) equality."
    eq: String
    "Filter nodes that contain the field, including nodes where the field value is null."
    exists: Boolean
    "Filter by property matching any of the provided values."
    in: [String]
    "Filter by property not equal to provided value."
    ne: String
    "Filter by property not matching any of the provided values."
    nin: [String]
    "Filter by property matching provided regular expression."
    regex: String
}

input TypeNameQueryOperatorInput {
    "Filter by property of (strict) equality."
    eq: TypeName
    "Filter nodes that contain the field, including nodes where the field value is null."
    exists: Boolean
    "Filter by property matching any of the provided values."
    in: [TypeName]
    "Filter by property not equal to provided value."
    ne: TypeName
    "Filter by property not matching any of the provided values."
    nin: [TypeName]
}

input WordPressAltreBevandeFilterInput {
    author: WordPressAuthorInferredQueryOperatorInput
    bevandeCat: WordPressBevandeCatInferredListQueryOperatorInput
    date: DateQueryOperatorInput
    dateGmt: DateQueryOperatorInput
    featuredMedia: WordPressAttachmentInferredQueryOperatorInput
    guid: StringQueryOperatorInput
    id: IDQueryOperatorInput
    link: StringQueryOperatorInput
    modified: DateQueryOperatorInput
    modifiedGmt: DateQueryOperatorInput
    slug: StringQueryOperatorInput
    status: StringQueryOperatorInput
    template: StringQueryOperatorInput
    title: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input WordPressAttachmentFilterInput {
    altText: StringQueryOperatorInput
    author: WordPressAuthorInferredQueryOperatorInput
    caption: StringQueryOperatorInput
    commentStatus: StringQueryOperatorInput
    date: DateQueryOperatorInput
    dateGmt: DateQueryOperatorInput
    description: StringQueryOperatorInput
    guid: StringQueryOperatorInput
    id: IDQueryOperatorInput
    link: StringQueryOperatorInput
    mediaDetails: WordPressAttachment_MediaDetailsFilterInput
    mediaType: StringQueryOperatorInput
    mimeType: StringQueryOperatorInput
    modified: DateQueryOperatorInput
    modifiedGmt: DateQueryOperatorInput
    pingStatus: StringQueryOperatorInput
    post: IntQueryOperatorInput
    slug: StringQueryOperatorInput
    smush: WordPressAttachment_SmushFilterInput
    sourceUrl: StringQueryOperatorInput
    status: StringQueryOperatorInput
    template: StringQueryOperatorInput
    title: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input WordPressAttachmentInferredQueryOperatorInput {
    "Use the id field instead."
    eq: ID
    id: IDQueryOperatorInput
    "Use the id field instead."
    in: [ID]
    "Use the id field instead."
    ne: ID
    "Use the id field instead."
    nin: [ID]
}

input WordPressAttachment_MediaDetailsFilterInput {
    file: StringQueryOperatorInput
    height: IntQueryOperatorInput
    imageMeta: WordPressAttachment_MediaDetails_ImageMetaFilterInput
    sizes: WordPressAttachment_MediaDetails_SizesFilterInput
    width: IntQueryOperatorInput
}

input WordPressAttachment_MediaDetails_ImageMetaFilterInput {
    aperture: StringQueryOperatorInput
    camera: StringQueryOperatorInput
    caption: StringQueryOperatorInput
    copyright: StringQueryOperatorInput
    createdTimestamp: StringQueryOperatorInput
    credit: StringQueryOperatorInput
    focalLength: StringQueryOperatorInput
    iso: StringQueryOperatorInput
    orientation: StringQueryOperatorInput
    shutterSpeed: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input WordPressAttachment_MediaDetails_SizesFilterInput {
    _1536X1536: WordPressAttachment_MediaDetails_Sizes_1536X1536FilterInput
    full: WordPressAttachment_MediaDetails_Sizes_FullFilterInput
    mediumLarge: WordPressAttachment_MediaDetails_Sizes_MediumLargeFilterInput
    postThumbnail: WordPressAttachment_MediaDetails_Sizes_PostThumbnailFilterInput
    thumbnail: WordPressAttachment_MediaDetails_Sizes_ThumbnailFilterInput
}

input WordPressAttachment_MediaDetails_Sizes_1536X1536FilterInput {
    file: StringQueryOperatorInput
    height: IntQueryOperatorInput
    mimeType: StringQueryOperatorInput
    sourceUrl: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input WordPressAttachment_MediaDetails_Sizes_FullFilterInput {
    file: StringQueryOperatorInput
    height: IntQueryOperatorInput
    mimeType: StringQueryOperatorInput
    sourceUrl: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input WordPressAttachment_MediaDetails_Sizes_MediumLargeFilterInput {
    file: StringQueryOperatorInput
    height: IntQueryOperatorInput
    mimeType: StringQueryOperatorInput
    sourceUrl: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input WordPressAttachment_MediaDetails_Sizes_PostThumbnailFilterInput {
    file: StringQueryOperatorInput
    height: IntQueryOperatorInput
    mimeType: StringQueryOperatorInput
    sourceUrl: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input WordPressAttachment_MediaDetails_Sizes_ThumbnailFilterInput {
    file: StringQueryOperatorInput
    height: IntQueryOperatorInput
    mimeType: StringQueryOperatorInput
    sourceUrl: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input WordPressAttachment_SmushFilterInput {
    sizes: WordPressAttachment_Smush_SizesFilterInput
    stats: WordPressAttachment_Smush_StatsFilterInput
}

input WordPressAttachment_Smush_SizesFilterInput {
    _1536X1536: WordPressAttachment_Smush_Sizes_1536X1536FilterInput
    mediumLarge: WordPressAttachment_Smush_Sizes_MediumLargeFilterInput
    postThumbnail: WordPressAttachment_Smush_Sizes_PostThumbnailFilterInput
    thumbnail: WordPressAttachment_Smush_Sizes_ThumbnailFilterInput
}

input WordPressAttachment_Smush_Sizes_1536X1536FilterInput {
    bytes: IntQueryOperatorInput
    percent: FloatQueryOperatorInput
    sizeAfter: IntQueryOperatorInput
    sizeBefore: IntQueryOperatorInput
    time: FloatQueryOperatorInput
}

input WordPressAttachment_Smush_Sizes_MediumLargeFilterInput {
    bytes: IntQueryOperatorInput
    percent: FloatQueryOperatorInput
    sizeAfter: IntQueryOperatorInput
    sizeBefore: IntQueryOperatorInput
    time: FloatQueryOperatorInput
}

input WordPressAttachment_Smush_Sizes_PostThumbnailFilterInput {
    bytes: IntQueryOperatorInput
    percent: FloatQueryOperatorInput
    sizeAfter: IntQueryOperatorInput
    sizeBefore: IntQueryOperatorInput
    time: FloatQueryOperatorInput
}

input WordPressAttachment_Smush_Sizes_ThumbnailFilterInput {
    bytes: IntQueryOperatorInput
    percent: FloatQueryOperatorInput
    sizeAfter: IntQueryOperatorInput
    sizeBefore: IntQueryOperatorInput
    time: FloatQueryOperatorInput
}

input WordPressAttachment_Smush_StatsFilterInput {
    apiVersion: StringQueryOperatorInput
    bytes: IntQueryOperatorInput
    keepExif: IntQueryOperatorInput
    lossy: BooleanQueryOperatorInput
    percent: FloatQueryOperatorInput
    sizeAfter: IntQueryOperatorInput
    sizeBefore: IntQueryOperatorInput
    time: FloatQueryOperatorInput
}

input WordPressAuthorFilterInput {
    avatarUrls: WordPressAuthor_AvatarUrlsFilterInput
    avatars: WordPressAuthor_AvatarsFilterInput
    description: StringQueryOperatorInput
    id: IDQueryOperatorInput
    link: StringQueryOperatorInput
    name: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    title: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input WordPressAuthorInferredQueryOperatorInput {
    "Use the id field instead."
    eq: ID
    id: IDQueryOperatorInput
    "Use the id field instead."
    in: [ID]
    "Use the id field instead."
    ne: ID
    "Use the id field instead."
    nin: [ID]
}

input WordPressAuthor_AvatarUrlsFilterInput {
    _24: StringQueryOperatorInput
    _48: StringQueryOperatorInput
    _96: StringQueryOperatorInput
}

input WordPressAuthor_AvatarsFilterInput {
    avatar24: StringQueryOperatorInput
    avatar48: StringQueryOperatorInput
    avatar96: StringQueryOperatorInput
}

input WordPressBevandeCatFilterInput {
    content: StringQueryOperatorInput
    count: IntQueryOperatorInput
    id: IDQueryOperatorInput
    slug: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input WordPressBevandeCatInferredListQueryOperatorInput {
    "Use the id field instead."
    contains: [ID]
    "Use the id field instead."
    containsAny: [ID]
    "Use the id field instead."
    containsNone: [ID]
    id: IDQueryOperatorInput
    "Use the id field instead."
    size: Int
}

input WordPressCategoryFilterInput {
    content: StringQueryOperatorInput
    count: IntQueryOperatorInput
    id: IDQueryOperatorInput
    slug: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input WordPressCategoryInferredListQueryOperatorInput {
    "Use the id field instead."
    contains: [ID]
    "Use the id field instead."
    containsAny: [ID]
    "Use the id field instead."
    containsNone: [ID]
    id: IDQueryOperatorInput
    "Use the id field instead."
    size: Int
}

input WordPressLeNostreBirreFilterInput {
    id: IDQueryOperatorInput
}

input WordPressPageFilterInput {
    acf: WordPressPage_AcfFilterInput
    author: WordPressAuthorInferredQueryOperatorInput
    commentStatus: StringQueryOperatorInput
    content: StringQueryOperatorInput
    date: DateQueryOperatorInput
    dateGmt: DateQueryOperatorInput
    excerpt: StringQueryOperatorInput
    featuredMedia: WordPressAttachmentInferredQueryOperatorInput
    guid: StringQueryOperatorInput
    id: IDQueryOperatorInput
    link: StringQueryOperatorInput
    menuOrder: IntQueryOperatorInput
    modified: DateQueryOperatorInput
    modifiedGmt: DateQueryOperatorInput
    parent: IntQueryOperatorInput
    pingStatus: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    status: StringQueryOperatorInput
    template: StringQueryOperatorInput
    title: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input WordPressPage_AcfFilterInput {
    homeIntro: WordPressPage_Acf_HomeIntroFilterInput
    intro: WordPressPage_Acf_IntroFilterInput
}

input WordPressPage_Acf_HomeIntroFilterInput {
    link: StringQueryOperatorInput
    subtitle: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input WordPressPage_Acf_IntroFilterInput {
    bigImage: StringQueryOperatorInput
    linkText: StringQueryOperatorInput
    smallImage: StringQueryOperatorInput
    text: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input WordPressPostFilterInput {
    author: WordPressAuthorInferredQueryOperatorInput
    categories: WordPressCategoryInferredListQueryOperatorInput
    commentStatus: StringQueryOperatorInput
    content: StringQueryOperatorInput
    date: DateQueryOperatorInput
    dateGmt: DateQueryOperatorInput
    excerpt: StringQueryOperatorInput
    featuredMedia: WordPressAttachmentInferredQueryOperatorInput
    format: StringQueryOperatorInput
    guid: StringQueryOperatorInput
    id: IDQueryOperatorInput
    link: StringQueryOperatorInput
    modified: DateQueryOperatorInput
    modifiedGmt: DateQueryOperatorInput
    path: StringQueryOperatorInput
    pingStatus: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    status: StringQueryOperatorInput
    sticky: BooleanQueryOperatorInput
    template: StringQueryOperatorInput
    title: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input WordPressPostTagFilterInput {
    id: IDQueryOperatorInput
}

input WordPressWpBlockFilterInput {
    id: IDQueryOperatorInput
}


scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

scalar File

scalar Image
